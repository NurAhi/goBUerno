[{"/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/index.tsx":"1","/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/reportWebVitals.ts":"2","/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/App.tsx":"3","/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/components/header/index.ts":"4","/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/components/header/header.tsx":"5"},{"size":554,"mtime":1673698050685,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1673698050686,"results":"8","hashOfConfig":"7"},{"size":2183,"mtime":1674155228611,"results":"9","hashOfConfig":"7"},{"size":35,"mtime":1673795598461,"results":"10","hashOfConfig":"7"},{"size":649,"mtime":1674069437881,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"22ii9y",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/index.tsx",[],[],"/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/reportWebVitals.ts",[],[],"/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/App.tsx",["28"],[],"import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport data from \"./data/data.json\";\nimport { Header } from \"./components/header\";\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [foundPerson, setFoundPerson] = useState<any>([\n    {\n      id: \"\",\n      name: \"\",\n      dni: \"\",\n    },\n  ]);\n\n  const doctorSearch = () => {\n    if (searchInput === null) return;\n\n    const foundCristi = data.filter((user) => {\n      return user.dni.toLowerCase().includes(searchInput.toLowerCase());\n    });\n\n    setFoundPerson(foundCristi);\n  };\n\n  const resetButton = () => {\n    setSearchInput(\"\");\n  };\n\n  const renderList = () => {\n    if (\n      foundPerson?.length === 0 &&\n      foundPerson?.name !== \"Cristina Ruiz Trescastro\"\n    ) {\n      return (\n        <li>\n          <p>no hay nadie con estos datos</p>\n        </li>\n      );\n    } else {\n      return foundPerson?.map((person: any, index: number) => {\n        return (\n          <div>\n            {person.name === \"Cristina Ruiz Trescastro\" ? (\n              <li key={index}>\n                <p>Enhorabuena {person.name} has aprobado</p>\n              </li>\n            ) : (\n              <li>\n                <p>\n                  ¡Bienvenida! Hace unos años..todo comenzó así. Esperabas un\n                  resultado que te permitiera acceder a lo que querías...así\n                  que, por favor introduce tu DNI y comprobemos cómo acaba esto.\n                </p>\n              </li>\n            )}\n          </div>\n        );\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <main className=\"container\">\n        <ul>{renderList()}</ul>\n\n        <form className=\"c-input-search\">\n          <input\n            className=\"c-input-search__input\"\n            type=\"search\"\n            onChange={(e) => setSearchInput(e.target.value)}\n            placeholder=\"Comprueba tu DNI\"\n          />\n          <button\n            className=\"c-input-search__button\"\n            type=\"button\"\n            onClick={() => doctorSearch()}\n          >\n            Buscar\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/components/header/index.ts",[],[],"/Users/nur.ahissami/Desktop/projects/go-bu-erno/src/components/header/header.tsx",[],[],{"ruleId":"29","severity":1,"message":"30","line":27,"column":9,"nodeType":"31","messageId":"32","endLine":27,"endColumn":20},"@typescript-eslint/no-unused-vars","'resetButton' is assigned a value but never used.","Identifier","unusedVar"]